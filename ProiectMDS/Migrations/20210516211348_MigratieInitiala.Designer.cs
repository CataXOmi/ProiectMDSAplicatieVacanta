// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProiectMDS.Contexts;

namespace ProiectMDS.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210516211348_MigratieInitiala")]
    partial class MigratieInitiala
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProiectMDS.Models.Atractie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa");

                    b.Property<string>("Denumire");

                    b.Property<TimeSpan>("OraDeschidere");

                    b.Property<TimeSpan>("OraInchidere");

                    b.Property<string>("Oras");

                    b.Property<float>("Pret");

                    b.HasKey("ID");

                    b.ToTable("Atractii");
                });

            modelBuilder.Entity("ProiectMDS.Models.Bilet", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AtractieID");

                    b.Property<string>("CodBilet");

                    b.Property<DateTime>("DataVizita");

                    b.Property<int>("VacantaID");

                    b.HasKey("ID");

                    b.HasIndex("AtractieID");

                    b.HasIndex("VacantaID");

                    b.ToTable("Bilete");
                });

            modelBuilder.Entity("ProiectMDS.Models.Cazare", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa");

                    b.Property<string>("Nume");

                    b.Property<string>("Oras");

                    b.Property<float>("Pret");

                    b.Property<string>("TipCazare");

                    b.HasKey("ID");

                    b.ToTable("Cazari");
                });

            modelBuilder.Entity("ProiectMDS.Models.Facilitate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Denumire");

                    b.HasKey("ID");

                    b.ToTable("Facilitati");
                });

            modelBuilder.Entity("ProiectMDS.Models.Fotografie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data");

                    b.Property<string>("Titlu");

                    b.Property<int>("UtilizatorID");

                    b.HasKey("ID");

                    b.HasIndex("UtilizatorID");

                    b.ToTable("Fotografii");
                });

            modelBuilder.Entity("ProiectMDS.Models.Mancare", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Denumire");

                    b.HasKey("ID");

                    b.ToTable("Mancaruri");
                });

            modelBuilder.Entity("ProiectMDS.Models.Meniu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MancareID");

                    b.Property<float>("Pret");

                    b.Property<int>("RestaurantID");

                    b.HasKey("ID");

                    b.HasIndex("MancareID");

                    b.HasIndex("RestaurantID");

                    b.ToTable("Meniuri");
                });

            modelBuilder.Entity("ProiectMDS.Models.Pachet", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CazareID");

                    b.Property<int>("FacilitateID");

                    b.HasKey("ID");

                    b.HasIndex("CazareID");

                    b.HasIndex("FacilitateID");

                    b.ToTable("Pachete");
                });

            modelBuilder.Entity("ProiectMDS.Models.Restaurant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa");

                    b.Property<string>("Nume");

                    b.Property<TimeSpan>("OraDeschidere");

                    b.Property<TimeSpan>("OraInchidere");

                    b.Property<string>("Oras");

                    b.HasKey("ID");

                    b.ToTable("Restaurante");
                });

            modelBuilder.Entity("ProiectMDS.Models.Rezervare", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataRezervare")
                        .HasColumnType("Date");

                    b.Property<int>("Rating");

                    b.Property<string>("Review");

                    b.Property<int>("UtilizatorID");

                    b.Property<int>("VacantaID");

                    b.HasKey("ID");

                    b.HasIndex("UtilizatorID");

                    b.HasIndex("VacantaID");

                    b.ToTable("Rezervari");
                });

            modelBuilder.Entity("ProiectMDS.Models.RezervareCazare", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CazareID");

                    b.Property<string>("CodRezervare");

                    b.Property<DateTime>("DataPlecare")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DataSosire")
                        .HasColumnType("Date");

                    b.Property<int>("VacantaID");

                    b.HasKey("ID");

                    b.HasIndex("CazareID");

                    b.HasIndex("VacantaID");

                    b.ToTable("RezervariCazari");
                });

            modelBuilder.Entity("ProiectMDS.Models.TichetMasa", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodTichet");

                    b.Property<DateTime>("DataVizita");

                    b.Property<int>("RestaurantID");

                    b.Property<int>("VacantaID");

                    b.HasKey("ID");

                    b.HasIndex("RestaurantID");

                    b.HasIndex("VacantaID");

                    b.ToTable("TicheteMasa");
                });

            modelBuilder.Entity("ProiectMDS.Models.Utilizator", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataNasterii")
                        .HasColumnType("Date");

                    b.Property<string>("Email");

                    b.Property<string>("Nume");

                    b.Property<string>("Parola");

                    b.Property<string>("Prenume");

                    b.Property<string>("Telefon");

                    b.Property<string>("Username");

                    b.HasKey("ID");

                    b.ToTable("Utilizatori");
                });

            modelBuilder.Entity("ProiectMDS.Models.Vacanta", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataInceput")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DataSfarsit")
                        .HasColumnType("Date");

                    b.Property<string>("Denumire");

                    b.Property<string>("Oras");

                    b.Property<string>("Tara");

                    b.HasKey("ID");

                    b.ToTable("Vacante");
                });

            modelBuilder.Entity("ProiectMDS.Models.Bilet", b =>
                {
                    b.HasOne("ProiectMDS.Models.Atractie", "Atractie")
                        .WithMany("Bilet")
                        .HasForeignKey("AtractieID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProiectMDS.Models.Vacanta", "Vacanta")
                        .WithMany("Bilet")
                        .HasForeignKey("VacantaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProiectMDS.Models.Fotografie", b =>
                {
                    b.HasOne("ProiectMDS.Models.Utilizator", "Utilizator")
                        .WithMany("Fotografie")
                        .HasForeignKey("UtilizatorID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProiectMDS.Models.Meniu", b =>
                {
                    b.HasOne("ProiectMDS.Models.Mancare", "Mancare")
                        .WithMany("Meniu")
                        .HasForeignKey("MancareID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProiectMDS.Models.Restaurant", "Restaurant")
                        .WithMany("Meniu")
                        .HasForeignKey("RestaurantID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProiectMDS.Models.Pachet", b =>
                {
                    b.HasOne("ProiectMDS.Models.Cazare", "Cazare")
                        .WithMany("Pachet")
                        .HasForeignKey("CazareID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProiectMDS.Models.Facilitate", "Facilitate")
                        .WithMany("Pachet")
                        .HasForeignKey("FacilitateID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProiectMDS.Models.Rezervare", b =>
                {
                    b.HasOne("ProiectMDS.Models.Utilizator", "Utilizator")
                        .WithMany("Rezervare")
                        .HasForeignKey("UtilizatorID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProiectMDS.Models.Vacanta", "Vacanta")
                        .WithMany("Rezervare")
                        .HasForeignKey("VacantaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProiectMDS.Models.RezervareCazare", b =>
                {
                    b.HasOne("ProiectMDS.Models.Cazare", "Cazare")
                        .WithMany("RezervareCazare")
                        .HasForeignKey("CazareID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProiectMDS.Models.Vacanta", "Vacanta")
                        .WithMany("RezervareCazare")
                        .HasForeignKey("VacantaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProiectMDS.Models.TichetMasa", b =>
                {
                    b.HasOne("ProiectMDS.Models.Restaurant", "Restaurant")
                        .WithMany("TichetMasa")
                        .HasForeignKey("RestaurantID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProiectMDS.Models.Vacanta", "Vacanta")
                        .WithMany("TichetMasa")
                        .HasForeignKey("VacantaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
